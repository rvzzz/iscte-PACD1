position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
facet_wrap(~ Service, scales = "free") +
labs(title = "Distribuição dos Serviços por Churn",
x = "",
y = "Frequência") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
theme_minimal() +
theme(legend.position = "top")
# Create the combined bar chart with side-by-side bars for Churn within each service facet
p <- ggplot(df_services, aes(x = Status, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.9), color = "black") +
geom_text(stat = "count", aes(label = ..count..),
position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
facet_wrap(~ Service, scales = "free") +
labs(title = "Distribuição dos Serviços por Churn",
x = "",
y = "Frequência") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
theme_minimal() +
theme(legend.position = "top")
ggplotly(p)
# Create the combined bar chart with side-by-side bars for Churn within each service facet
ggplot(df_services, aes(x = Status, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.9), color = "black") +
geom_text(stat = "count", aes(label = ..count..),
position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
facet_wrap(~ Service, scales = "free") +
labs(title = "Distribuição dos Serviços por Churn",
x = "",
y = "Frequência") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
theme_minimal() +
theme(legend.position = "top")
p <- ggplot(df, aes(x = tenure, y = MonthlyCharges, color = Churn)) +
geom_point(alpha = 0.6) +
scale_color_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
facet_grid(Contract ~ PaymentMethod) +
labs(title = "MonthlyCharges vs. Tenure por Contrato e Método de Pagamento",
x = "Tenure (meses)",
y = "Monthly Charges") +
theme_minimal()
ggplotly(p)
source("02 - conversões e limpeza de dados.R")
p <- ggplot(df, aes(x = tenure, y = MonthlyCharges, color = Churn)) +
geom_point(alpha = 0.6) +
scale_color_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
facet_grid(Contract ~ PaymentMethod) +
labs(title = "MonthlyCharges vs. Tenure por Contrato e Método de Pagamento",
x = "Tenure (meses)",
y = "Monthly Charges") +
theme_minimal()
ggplotly(p)
source("C:/Users/jricv/Desktop/ISCTE_2_ANO/2_SEMESTRE/Projeto Aplicado em Ciência de Dados I/PACD1 - Projeto 1 de 2/00 - carregar bibliotecas e dataset.R", echo=TRUE)
source("C:/Users/jricv/Desktop/ISCTE_2_ANO/2_SEMESTRE/Projeto Aplicado em Ciência de Dados I/PACD1 - Projeto 1 de 2/01 - exploração de dados preliminar.R", echo=TRUE)
source("C:/Users/jricv/Desktop/ISCTE_2_ANO/2_SEMESTRE/Projeto Aplicado em Ciência de Dados I/PACD1 - Projeto 1 de 2/01 - exploração de dados preliminar.R", echo=TRUE)
# verificar NAs na base de dados - tabela com a quantidade de NAs por coluna
colSums(is.na(df))
# Visualizar as linhas correspondentes (observações) com NA existentes na coluna TotalCharges
df %>% filter(is.na(TotalCharges))
# Visualizar as linhas correspondentes (observações) com NA existentes na coluna TotalCharges
View(df %>% filter(is.na(TotalCharges)))
# verificar NAs na base de dados - tabela com a quantidade de NAs por coluna
colSums(is.na(df))
# verificar NAs na base de dados - tabela com a quantidade de NAs por coluna
View(colSums(is.na(df)))
# verificar NAs na base de dados - tabela com a quantidade de NAs por coluna
colSums(is.na(df))
# estrutura do dataframe - tipo de variáveis
str(df)
# estatísticas descritivas
summary(df)
# Distribuição de Churn - Tabela de Frequência (Absoluta e Relativa)
cbind(Absolute_Frequency = table(df$Churn),
Relative_Frequency = prop.table(table(df$Churn)))
# Visualizar a distribuição de Churn
ggplot(df, aes(x = Churn, fill = Churn)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
labs(title = "Distribuição de Churn", x = "Churn", y = "Contagem")
# Transform the data to long format while keeping the Churn variable
df_long <- df %>%
select(Churn, tenure, MonthlyCharges, TotalCharges) %>%
pivot_longer(cols = -Churn, names_to = "Variable", values_to = "Value")
# Create the ggplot with tooltips for interactivity
p <- ggplot(df_long, aes(x = Churn, y = Value, fill = Churn,
text = paste("Churn:", Churn, "<br>Variable:", Variable, "<br>Value:", Value))) +
geom_boxplot() +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
labs(title = "Distribuição das Variáveis por Churn",
x = "Churn",
y = "Valor") +
theme_minimal()
# Convert the ggplot to an interactive plotly object
ggplotly(p, tooltip = "text")
# Transform the data to long format while keeping the Churn variable
df_long <- df %>%
select(Churn, tenure, MonthlyCharges, TotalCharges) %>%
pivot_longer(cols = -Churn, names_to = "Variable", values_to = "Value")
# Create the ggplot with tooltips for interactivity
p <- ggplot(df_long, aes(x = Churn, y = Value, fill = Churn,
text = paste("Churn:", Churn, "<br>Variable:", Variable, "<br>Value:", Value))) +
geom_boxplot() +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
labs(title = "Distribuição das Variáveis por Churn",
x = "Churn",
y = "Valor") +
theme_minimal()
# Convert the ggplot to an interactive plotly object
ggplotly(p, tooltip = "text")
source("C:/Users/jricv/Desktop/ISCTE_2_ANO/2_SEMESTRE/Projeto Aplicado em Ciência de Dados I/PACD1 - Projeto 1 de 2/01 - exploração de dados preliminar.R", echo=TRUE)
source("C:/Users/jricv/Desktop/ISCTE_2_ANO/2_SEMESTRE/Projeto Aplicado em Ciência de Dados I/PACD1 - Projeto 1 de 2/02 - conversões e limpeza de dados.R", echo=TRUE)
# verificar existência de valores duplicados
if (sum(duplicated(df)) > 0) {
cat("Number of duplicate rows:", sum(duplicated(df)))
}
source("C:/Users/jricv/Desktop/ISCTE_2_ANO/2_SEMESTRE/Projeto Aplicado em Ciência de Dados I/PACD1 - Projeto 1 de 2/01 - exploração de dados preliminar.R", echo=TRUE)
# verificar existência de valores duplicados
if (sum(duplicated(df)) > 0) {
cat("Number of duplicate rows:", sum(duplicated(df)))
}
# verificar existência de valores duplicados
num_duplicates <- sum(duplicated(df))
if (num_duplicates > 0) {
cat("Number of duplicate rows:", num_duplicates)
}
sum(duplicated(df))
source("C:/Users/jricv/Desktop/ISCTE_2_ANO/2_SEMESTRE/Projeto Aplicado em Ciência de Dados I/PACD1 - Projeto 1 de 2/01 - exploração de dados preliminar.R", echo=TRUE)
num_duplicates
sum(duplicated(df))
# verificar existência de valores duplicados
if (sum(duplicated(df)) > 0) {
cat("Number of duplicate rows:", sum(duplicated(df)))
} else {
cat("No duplicate rows")
}
source("C:/Users/jricv/Desktop/ISCTE_2_ANO/2_SEMESTRE/Projeto Aplicado em Ciência de Dados I/PACD1 - Projeto 1 de 2/01 - exploração de dados preliminar.R", echo=TRUE)
source("02 - conversões e limpeza de dados.R")
# estrutura do dataframe - tipo de variáveis
str(df)
# estatísticas descritivas
summary(df)
# Distribuição de Churn - Tabela de Frequência (Absoluta e Relativa)
cbind(Absolute_Frequency = table(df$Churn),
Relative_Frequency = prop.table(table(df$Churn)))
source("C:/Users/jricv/Desktop/ISCTE_2_ANO/2_SEMESTRE/Projeto Aplicado em Ciência de Dados I/PACD1 - Projeto 1 de 2/02 - conversões e limpeza de dados.R", echo=TRUE)
source("02 - conversões e limpeza de dados.R")
# estrutura do dataframe - tipo de variáveis
str(df)
# estatísticas descritivas
summary(df)
# Distribuição de Churn - Tabela de Frequência (Absoluta e Relativa)
cbind(Absolute_Frequency = table(df$Churn),
Relative_Frequency = prop.table(table(df$Churn)))
# Visualizar a distribuição de Churn
ggplot(df, aes(x = Churn, fill = Churn)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
labs(title = "Distribuição de Churn", x = "Churn", y = "Contagem")
# Transform the data to long format while keeping the Churn variable
df_long <- df %>%
select(Churn, tenure, MonthlyCharges, TotalCharges) %>%
pivot_longer(cols = -Churn, names_to = "Variable", values_to = "Value")
# Create the ggplot with tooltips for interactivity
p <- ggplot(df_long, aes(x = Churn, y = Value, fill = Churn,
text = paste("Churn:", Churn, "<br>Variable:", Variable, "<br>Value:", Value))) +
geom_boxplot() +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
labs(title = "Distribuição das Variáveis por Churn",
x = "Churn",
y = "Valor") +
theme_minimal()
# Convert the ggplot to an interactive plotly object
ggplotly(p, tooltip = "text")
# Tenure por Churn
p <- ggplot(df, aes(x = tenure, fill = Churn)) +
geom_histogram(binwidth = 5, position = "dodge") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
labs(title = "Distribuição do Tenure por Churn", x = "Tenure (meses)", y = "Frequência")
ggplotly(p)
# Cobranças mensais por Churn
p <- ggplot(df, aes(x = MonthlyCharges, fill = Churn)) +
geom_histogram(binwidth = 5, position = "dodge") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
labs(title = "Distribuição das Cobranças Mensais por Churn", x = "Monthly Charges", y = "Frequência")
ggplotly(p)
# Total cobrado por Churn
p <- ggplot(df, aes(x = TotalCharges, fill = Churn)) +
geom_histogram(binwidth = 100, position = "dodge") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
labs(title = "Distribuição do Total Cobrado por Churn", x = "Total Charges", y = "Frequência")
ggplotly(p)
# Preparar os dados: selecionar as variáveis e transformar para formato longo
df_contract <- df %>%
select(Churn, Contract, PaperlessBilling, PaymentMethod) %>%
pivot_longer(cols = -Churn, names_to = "Variable", values_to = "Value")
# Criar o gráfico de barras com as barras dos dois grupos lado a lado, na vertical
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, vjust = 0.5))
# Converter para interativo com plotly (opcional)
ggplotly(p)
# Criar o gráfico de barras com as barras dos dois grupos lado a lado, na vertical
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 0, vjust = 0.5))
# Converter para interativo com plotly (opcional)
ggplotly(p)
# Criar o gráfico de barras com as barras dos dois grupos lado a lado, na vertical
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, vjust = -0.5))
# Converter para interativo com plotly (opcional)
ggplotly(p)
# Criar o gráfico de barras com as barras dos dois grupos lado a lado, na vertical
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, vjust = -5.5))
# Converter para interativo com plotly (opcional)
ggplotly(p)
# Criar o gráfico de barras com as barras dos dois grupos lado a lado, na vertical
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
# Criar o gráfico de barras com as barras dos dois grupos lado a lado, na vertical
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
facet_wrap(~ Variable, scales = "free") +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
y = "Contagem") +
theme(legend.position = "top",
# Converter para interativo com plotly (opcional)
ggplotly(p)
# Criar o gráfico de barras com as barras dos dois grupos lado a lado, na vertical
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
facet_wrap(~ Variable, scales = "free") +
# Criar o gráfico de barras com as barras dos dois grupos lado a lado, na vertical
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, vjust = -5.5))
# Converter para interativo com plotly (opcional)
ggplotly(p)
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, vjust = -0.5, margin = margin(t = 10)))
# Converter para interativo com plotly (opcional)
ggplotly(p)
# Converter para interativo com plotly (opcional)
ggplotly(p)
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, vjust = -0.5, margin = margin(b = 10)))
# Converter para interativo com plotly (opcional)
ggplotly(p)
# Converter para interativo com plotly (opcional)
ggplotly(p)
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(
legend.position = "top",
axis.text.x = element_text(
angle = 90,
hjust = 1,
vjust = 0.5,
margin = margin(t = 10)
),
plot.margin = margin(1, 1, 1, 1, "cm")
)
# Converter para interativo com plotly (opcional)
ggplotly(p)
# Preparar os dados: selecionar as variáveis e transformar para formato longo
df_contract <- df %>%
select(Churn, Contract, PaperlessBilling, PaymentMethod) %>%
pivot_longer(cols = -Churn, names_to = "Variable", values_to = "Value")
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(
legend.position = "top",
axis.text.x = element_text(
angle = 90,
hjust = 1,
vjust = 0.5,
margin = margin(t = 10)
),
plot.margin = margin(1, 1, 1, 1, "cm")
)
# Converter para interativo com plotly (opcional)
ggplotly(p)
# Preparar os dados: selecionar variáveis demográficas e manter a variável Churn
df_demog <- df %>%
select(Churn, gender, SeniorCitizen, Partner, Dependents) %>%
pivot_longer(cols = -Churn, names_to = "Variable", values_to = "Value")
# Create the combined bar chart using facet_wrap with side-by-side bars for Churn
ggplot(df_demog, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.9), color = "black") +
geom_text(stat = "count", aes(label = ..count..),
position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
facet_wrap(~ Variable, scales = "free") +
labs(title = "Distribuição Demográfica por Variável e Churn",
x = "",
y = "Frequência") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df_long, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
geom_text(
stat = "count",
aes(label = ..count..),
position = position_dodge(width = 0.8),
vjust = -0.5
) +
facet_wrap(~ Variable, scales = "free") +
scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +  # Extra 20% space at top
labs(title = "Distribuição Demográfica por Variável e Churn",
x = "",
y = "Frequência") +
theme_minimal()
# Create the combined bar chart using facet_wrap with side-by-side bars for Churn
ggplot(df_demog, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.9), color = "black") +
geom_text(
stat = "count",
aes(label = ..count..),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3
) +
facet_wrap( ~ Variable, scales = "free") +
labs(title = "Distribuição Demográfica por Variável e Churn", x = "", y = "Frequência") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, hjust = 1))
# Create the combined bar chart using facet_wrap with side-by-side bars for Churn
p <- ggplot(df_demog, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.9), color = "black") +
geom_text(
stat = "count",
aes(label = ..count..),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3
) +
facet_wrap( ~ Variable, scales = "free") +
labs(title = "Distribuição Demográfica por Variável e Churn", x = "", y = "Frequência") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(p)
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(
legend.position = "top",
axis.text.x = element_text(
angle = 90,
hjust = 1,
vjust = 0.5,
margin = margin(t = 10)
),
plot.margin = margin(1, 1, 1, 1, "cm")
)
# Converter para interativo com plotly (opcional)
ggplotly(p)
# Preparar os dados: selecionar variáveis demográficas e manter a variável Churn
df_demog <- df %>%
select(Churn, gender, SeniorCitizen, Partner, Dependents) %>%
pivot_longer(cols = -Churn, names_to = "Variable", values_to = "Value")
# Create the combined bar chart using facet_wrap with side-by-side bars for Churn
ggplot(df_demog, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.9), color = "black") +
geom_text(
stat = "count",
aes(label = ..count..),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3
) +
facet_wrap( ~ Variable, scales = "free") +
labs(title = "Distribuição Demográfica por Variável e Churn", x = "", y = "Frequência") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
theme_minimal() +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, hjust = 1))
# Prepare the data: select the service variables along with Churn
df_services <- df %>%
select(Churn, PhoneService, MultipleLines, InternetService, OnlineSecurity,
OnlineBackup, DeviceProtection, TechSupport, StreamingTV, StreamingMovies) %>%
pivot_longer(cols = -Churn, names_to = "Service", values_to = "Status")
# Create the combined bar chart with side-by-side bars for Churn within each service facet
ggplot(df_services, aes(x = Status, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.9), color = "black") +
geom_text(stat = "count", aes(label = ..count..),
position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
facet_wrap(~ Service, scales = "free") +
labs(title = "Distribuição dos Serviços por Churn",
x = "",
y = "Frequência") +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
theme_minimal() +
theme(legend.position = "top")
p <- ggplot(df_contract, aes(x = Value, fill = Churn)) +
geom_bar(position = position_dodge(width = 0.8), color = "black") +
facet_wrap(~ Variable, scales = "free") +
scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
labs(title = "Distribuição de Contract, PaperlessBilling e PaymentMethod por Churn",
x = "Categoria",
y = "Contagem") +
theme_minimal() +
theme(
legend.position = "top",
axis.text.x = element_text(
angle = 90,
hjust = 1,
vjust = 0.5,
margin = margin(t = 10)
),
plot.margin = margin(1, 1, 1, 1, "cm")
)
# Converter para interativo com plotly (opcional)
ggplotly(p)
source("02 - conversões e limpeza de dados.R")
p <- ggplot(df, aes(x = Churn, y = MonthlyCharges, fill = Churn)) +
geom_violin(trim = FALSE, alpha = 0.5) +
scale_fill_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
geom_boxplot(width = 0.1, fill = "white") +
geom_jitter(width = 0.1, alpha = 0.4) +
labs(title = "Distribuição de MonthlyCharges por Churn",
x = "Churn",
y = "Monthly Charges") +
theme_minimal()
ggplotly(p)
source("C:/Users/jricv/Desktop/ISCTE_2_ANO/2_SEMESTRE/Projeto Aplicado em Ciência de Dados I/PACD1 - Projeto 1 de 2/08 - 3D plot.R", echo=TRUE)
p <- ggplot(df, aes(x = tenure, y = MonthlyCharges, color = Churn)) +
geom_point(alpha = 0.6) +
scale_color_manual(values = c("No" = "#4CBB17", "Yes" = "red")) +
facet_grid(Contract ~ PaymentMethod) +
labs(title = "MonthlyCharges vs. Tenure por Contrato e Método de Pagamento",
x = "Tenure (meses)",
y = "Monthly Charges") +
theme_minimal()
ggplotly(p)
